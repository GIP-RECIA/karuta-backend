# =========================================
# ======== Karuta Configuration ===========
# =========================================

# Options
#enable_password_reset=y

### Messaging type (email|sakai),
### if commented, sending notification will be disabled
notification=email
#notification=sakai

# ==== When notification = sakai ====
# Just changing SERVER should be sufficient
sakaiDirectSessionUrl=http://SERVER/direct/session
sakaiUsername=testadmin
sakaiPassword=testadmin

sakaiInterface=http://SERVER/direct/notify/post/

# ==== When notification = email =====
## Log in to server
## mail_login can be different than mail_sender. In some case it's the same
mail_login=mail_login
## If mail_sender isn't defined, mail_login is used
mail_sender=USERNAME@example.com
mail_password=PASSWORD
## SMTP Server info
smtp.server=smtp.example.com
smtp.port=587
smtp.useauth=true
smtp.starttls=true
## cc email for some email, notably password recovery log
sys_email=info@domain.com

### ==== Logging configuration ====
## If edit_log is empty, don't log editions
#auth_log=auth.log
#edit_log=edit.log
#error_log=error.log
#security_log=security.log
## Logging interface
logfile_1=base.log
logfile_2=special.log
logfile_3=other.log

# ==== Database
# Configuring DB type, 
# and redirection if you plan on separating servlets on different servers (need testing)
dataProviderClass=com.portfolio.data.provider.MysqlDataProvider
DBUser=karuta
DBPass=karuta_password
DBDriver=com.mysql.jdbc.Driver
#DBDriver=org.mariadb.jdbc.Driver
DBUrl=jdbc:mysql://localhost/karuta-backend?useUnicode=true&useEncoding=true&characterEncoding=UTF-8
#DBUrl=jdbc:mariadb://localhost/karuta-backend?useUnicode=true&useEncoding=true&characterEncoding=UTF-8
serverType=mysql
#serverType=oracle
#DBDriver=oracle.jdbc.driver.OracleDriver
#DBUrl=jdbc:oracle:thin:@//localhost:1234/KARUTA
### Pooling configuration
DB.MaxWait=1000
DB.MaxTotal=400
DB.MinIdle=5
DB.MaxIdle=50
DB.WaitEviction=1000
DB.NumTestEviction=-10

### Servlet redirection (When putting services on different servers)
backendserver=http://localhost:8080/karuta-backend
fileserver=http://localhost:8080/karuta-fileserver
ui_redirect_location=/karuta/application/htm/karuta.htm

## When commented, XSLInternal == backendserver.
## Uncomment and change if PDF generation have trouble with the network
#XSLInternal=http://localhost:8080/karuta-backend

### ==== CSV related
# Default: csv_separator=,
#csv_separator=,

# ==== Direct URL key
directkey=directkey

# ==== CAS ====
#casUrlValidation=https://{CAS_SERVER}/serviceValidate
# If you have the network setup:
# {internet} <-> {proxy https} <-> {backend http}
# Have "X-Forwarded-Proto https" forwarded from the proxy

# ==== Elgg ====
#elggDefaultApiUrl=http://{ELGG_SERVER}/elgg/services/api/rest/json/
#elggDefaultSiteUrl=http://{ELGG_SERVER}/elgg/
#elggApiKey=apikey
#elggDefaultUserPassword=defaultpassword

# ==== LTI configuration =====
### Uncomment and configure when you want to use LTI
#basiclti.provider.KARUTA.secret=asdf1234

### Redirection for Karuta 1.2.x
#lti_redirect_location=/karuta/karuta/htm/list.htm
### Redirection for Karuta 2.x
#lti_redirect_location=/karuta/karuta/htm/karuta.htm

# ==== Shibboleth attrib =====
## Assume format is "[Last name] [First name]"
#shib_name=name
#shib_email=email

# ==== External account creation ====
# -- For cases when portfolios are created at user creation --
#createAsDesigner=y
# == Assigning external value to Karuta DB ==
#=display_firstname
#=display_lastname
#=email

# ==== ROME service =====
#ROMEServiceURL = "SERVICE_URL";
#ROMEclientid = "MY_CLIENT_ID";
#ROMEclientsecret = "MY_CLIENT_SECRET";
#ROMEscope = "REALM_SCOPE";
#ROMERepoURL = "REPO_URL";

# ==== OAuth2 service =====
#URLAuthorize=https://AUTHSERVER/oauth2/v2/authorize
#URLToken=https://AUTHSERVER/oauth2/v2/token
#URLKeys=https://AUTHSERVER/discovery/keys
# Application id
#OAUth_client_id=MY_APPLICATION_ID
#OAuth_client_secret=MY_APPLICATION_SECRET
#OAuth_scope=openid+profile+offline_access

